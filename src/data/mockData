export const mockBrands = [
    {
        id: 1,
        name: "Richard Mille",
        image: "/images/RM/RM27-04.jpg",
        description: "Ultra-luxury Swiss timepieces"
    },
    {
        id: 2,
        name: "Rolex",
        image: "/images/Rolex/Daytona.png",
        description: "Crown of Swiss watchmaking"
    },
    {
        id: 3,
        name: "Patek Philippe",
        image: "/images/Patek Philippe/Nautilus.jpg",
        description: "Tradition of excellence since 1839"
    },
    {
        id: 4,
        name: "Audemars Piguet",
        image: "/images/Audemars Piguet/Royal_Oak.png",
        description: "Masters of complications"
    },
    {
        id: 5,
        name: "Omega",
        image: "/images/Omega/Speedmaster.png",
        description: "Precision for every achievement"
    },
    {
        id: 6,
        name: "TAG Heuer",
        image: "/images/Tag_Heuer/Monaco.png",
        description: "Swiss avant-garde since 1860"
    }
];

export const mockModels = {
    "Richard Mille": [
        {
            id: 1,
            name: "RM 27-04 Rafael Nadal",
            price: 89.99,
            originalPrice: 99.99,
            discount: 10,
            image: "/images/RM/RM27-04.jpg",
            description: "Ultra-light tourbillon designed for extreme sports"
        },
        {
            id: 2,
            name: "RM 35-03 Automatic Rafael Nadal",
            price: 79.99,
            image: "/images/RM/RM35-04.jpg",
            description: "Lightweight automatic movement"
        },
        {
            id: 3,
            name: "RM 11-03 Automatic Flyback Chronograph",
            price: 74.99,
            originalPrice: 89.99,
            discount: 17,
            image: "/images/RM/RM11-03.jpg",
            description: "Flyback chronograph with annual calendar"
        }
    ],
    "Rolex": [
        {
            id: 4,
            name: "Submariner Date",
            price: 59.99,
            image: "/images/Rolex/Submariner_date.jpg",
            description: "Professional diving watch"
        },
        {
            id: 5,
            name: "GMT-Master II",
            price: 64.99,
            originalPrice: 74.99,
            discount: 13,
            image: "/images/Rolex/GMT-masterII.png",
            description: "Dual time zone watch"
        },
        {
            id: 6,
            name: "Daytona",
            price: 69.99,
            originalPrice: 79.99,
            discount: 13,
            image: "/images/Rolex/Daytona.png",
            description: "Racing chronograph"
        }
    ],
    "Patek Philippe": [
        {
            id: 7,
            name: "Nautilus 5711/1A",
            price: 84.99,
            image: "/images/Patek Philippe/Nautilus.jpg",
            description: "Luxury sports watch"
        },
        {
            id: 8,
            name: "Calatrava 5227",
            price: 79.99,
            originalPrice: 89.99,
            discount: 11,
            image: "/images/Patek Philippe/Calatrava.png",
            description: "Classic dress watch"
        }
    ],
    "Audemars Piguet": [
        {
            id: 9,
            name: "Royal Oak 15500ST",
            price: 89.99,
            image: "/images/Audemars Piguet/Royal_Oak.png",
            description: "Iconic octagonal bezel design"
        }
    ],
    "Omega": [
        {
            id: 10,
            name: "Speedmaster Professional",
            price: 44.99,
            image: "/images/Omega/Speedmaster.png",
            description: "Moonwatch chronograph"
        }
    ],
    "TAG Heuer": [
        {
            id: 11,
            name: "Monaco",
            price: 39.99,
            originalPrice: 49.99,
            discount: 20,
            image: "/images/Tag_Heuer/Monaco.png",
            description: "Square case racing chronograph"
        }
    ]
};


// Funciones simuladas de API
export const fetchBrands = () => {
    return new Promise((resolve) => {
        setTimeout(() => {
            resolve({ data: mockBrands });
        }, 100);
    });
};

export const fetchModels = (brandName) => {
    return new Promise((resolve, reject) => {
        setTimeout(() => {
            const models = mockModels[brandName];
            if (models) {
                resolve({ data: models });
            } else {
                reject(new Error(`No se encontraron modelos para ${brandName}`));
            }
        }, 300);
    });
};

export const fetchProductById = (id) => {
    return new Promise((resolve, reject) => {
        setTimeout(() => {
            const allProducts = Object.values(mockModels).flat();
            const product = allProducts.find(p => p.id === parseInt(id));

            if (product) {
                resolve({ data: product });
            } else {
                reject(new Error('Producto no encontrado'));
            }
        }, 200);
    });
};